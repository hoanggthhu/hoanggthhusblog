<!doctype html>
<html lang="vi">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Blogs — Mơ Nắng</title>
  <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400;0,700;1,400&family=Inter:wght@300;400;600&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="style.css">

  <style>
    /* ===== HIỆU ỨNG CHỮ ĐỒNG BỘ ===== */
    .gradient-title {
      background: linear-gradient(90deg, #ffb347, #ffcc33, #ffb347);
      background-size: 200% auto;
      color: transparent;
      background-clip: text;
      -webkit-background-clip: text;
      animation: gradientFlow 5s ease infinite;
    }
    @keyframes gradientFlow {
      0% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
      100% { background-position: 0% 50%; }
    }

    /* headline subtle pop on load */
    .category-header .gradient-title {
      display: inline-block;
      transform-origin: center;
      opacity: 0;
      transform: translateY(-8px) scale(0.98);
      animation: headlineIn 700ms cubic-bezier(.2,.9,.3,1) forwards 120ms;
    }
    @keyframes headlineIn {
      to { opacity: 1; transform: translateY(0) scale(1); }
    }

    .posts-list {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
      gap: 1.5rem;
      margin-top: 2rem;
    }

    .post-card {
      background: #fff;
      border-radius: 12px;
      overflow: hidden;
      box-shadow: 0 4px 12px rgba(0,0,0,0.05);
      display: flex;
      flex-direction: column;
      transition: transform 0.3s ease, box-shadow 0.3s ease, opacity 0.4s ease;
      opacity: 0;
      transform: translateY(30px);
      will-change: transform, opacity;
    }

    .post-card.show {
      opacity: 1;
      transform: translateY(0);
    }

    .post-card:hover {
      transform: translateY(-6px);
      box-shadow: 0 12px 30px rgba(0,0,0,0.08);
    }

    .post-card img {
      width: 100%;
      height: 200px;
      object-fit: cover;
      transition: transform 0.45s cubic-bezier(.2,.9,.3,1), filter 0.3s ease;
      display: block;
    }
    .post-card:hover img {
      transform: scale(1.06) translateZ(0);
      filter: brightness(1.03);
    }

    .post-body {
      padding: 1rem 1.25rem;
      flex: 1;
      display: flex;
      flex-direction: column;
    }
    .post-body h4 {
      font-family: 'Playfair Display', serif;
      margin: 0 0 0.5rem 0;
      font-size: 1.12rem;
      line-height: 1.25;
    }
    .post-body .excerpt {
      flex: 1;
      font-size: 0.95rem;
      color: #4c4a48;
      margin-bottom: 0.75rem;
    }
    .post-body .read {
      text-decoration: none;
      color: #6a4caf;
      font-weight: 600;
      font-size: 0.95rem;
      align-self: flex-start;
      transition: color .2s ease, transform .08s ease;
    }
    .post-body .read:hover {
      text-decoration: underline;
      color: #4a2a8b;
      transform: translateY(-1px);
    }

    /* Search input style */
    .search-container {
      text-align: right;
      margin-top: 1rem;
    }
    .search-container input {
      padding: 0.5rem 1rem;
      font-size: 1rem;
      border-radius: 20px;
      border: 1px solid #ccc;
      max-width: 300px;
      width: 100%;
      transition: box-shadow 0.3s ease;
    }
    .search-container input:focus {
      outline-color: #6a4caf;
      box-shadow: 0 0 5px #6a4cafaa;
    }

    /* responsive */
    @media (max-width: 520px) {
      .post-card img { height: 160px; }
    }
  </style>
</head>
<body>
  <header class="site-header">
    <div class="container header-inner" style="position:relative;">
      <a class="brand" href="index.html" aria-label="Về trang chủ">
        <h1 class="gradient-title">Mơ Nắng</h1>
        <p class="tag">Những món đồ mang năng lượng chữa lành</p>
      </a>

      <button class="burger" id="burger" aria-controls="mainNav" aria-expanded="false" aria-label="Mở menu">
        <span></span>
        <span></span>
        <span></span>
      </button>

      <nav class="main-nav" id="mainNav" aria-hidden="true">
        <ul>
          <li><a href="index.html">Trang chủ</a></li>
          <li><a href="mo-nang.html">Mơ Nắng</a></li>
          <li><a href="o-trong-vuon.html">Ở Trong Vườn</a></li>
          <li><a href="binh-yen.html">Góc bình yên</a></li>
          <li><a href="blogs-list.html" class="active">Blogs</a></li>
          <li><a href="ve-toi.html">Về mình</a></li>
          <li><a href="contact.html">Liên lạc</a></li>
        </ul>
      </nav>
    </div>
  </header>

  <main class="container">
    <section class="category-header">
      <h2 class="gradient-title">Blogs của Mơ Nắng</h2>
    </section>

    <!-- Search input -->
    <section class="search-container">
      <input
        type="search"
        id="searchInput"
        placeholder="Tìm blog..."
        aria-label="Tìm blog"
      >
    </section>

    <section class="posts-list" id="postsList">
      <!-- Blog posts sẽ load bằng JS -->
    </section>
  </main>

  <footer class="site-footer">
    <div class="container footer-inner">
      <p>&copy; <span id="year2"></span> Hoàngg Thhư's Blog</p>
    </div>
  </footer>

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const burger = document.getElementById("burger");
      const mainNav = document.getElementById("mainNav");
      const yearEl = document.getElementById("year2");
      const postsList = document.getElementById("postsList");

      // Toggle burger menu
      function openMenu() {
        mainNav.classList.add("open");
        burger.classList.add("active");
        burger.setAttribute("aria-expanded", "true");
        mainNav.setAttribute("aria-hidden", "false");
      }
      function closeMenu() {
        mainNav.classList.remove("open");
        burger.classList.remove("active");
        burger.setAttribute("aria-expanded", "false");
        mainNav.setAttribute("aria-hidden", "true");
      }
      burger.addEventListener("click", () => {
        const isOpen = mainNav.classList.contains("open");
        if (isOpen) closeMenu(); else openMenu();
      });
      burger.addEventListener("keydown", (e) => {
        if (e.key === "Enter" || e.key === " ") {
          e.preventDefault();
          burger.click();
        } else if (e.key === "Escape") {
          closeMenu();
        }
      });
      document.addEventListener("click", (e) => {
        if (!mainNav.contains(e.target) && !burger.contains(e.target)) {
          closeMenu();
        }
      });
      document.addEventListener("keydown", (e) => {
        if (e.key === "Escape") closeMenu();
      });
      mainNav.querySelectorAll("a").forEach(link => {
        link.addEventListener("click", () => {
          closeMenu();
        });
      });

      // Fill year in footer
      if (yearEl) yearEl.textContent = new Date().getFullYear();

      // Load blog posts from JSON
      fetch('blog.json')
        .then(res => res.json())
        .then(posts => {
          posts.forEach((post, i) => {
            const article = document.createElement('article');
            article.className = 'post-card';
            article.dataset.index = i;
            article.innerHTML = `
              <img src="${post.image}" alt="${post.title}">
              <div class="post-body">
                <h4>${post.title}</h4>
                <p class="excerpt">${post.excerpt}</p>
                <a href="${post.url}" class="read">Đọc</a>
              </div>
            `;
            postsList.appendChild(article);
          });

          // IntersectionObserver để hiện animation bài viết
          const postCards = document.querySelectorAll('.post-card');
          if ('IntersectionObserver' in window && postCards.length) {
            const observer = new IntersectionObserver((entries) => {
              entries.forEach(entry => {
                if (entry.isIntersecting) {
                  const el = entry.target;
                  const idx = parseInt(el.dataset.index || "0", 10);
                  el.style.setProperty('--delay', `${idx * 120}ms`);
                  setTimeout(() => el.classList.add('show'), idx * 120);
                  observer.unobserve(el);
                }
              });
            }, { threshold: 0.18 });
            postCards.forEach(card => observer.observe(card));
          } else {
            postCards.forEach(c => c.classList.add('show'));
          }

          // Search blog filter
          const searchInput = document.getElementById('searchInput');
          searchInput.addEventListener('input', () => {
            const term = searchInput.value.toLowerCase();
            postCards.forEach(post => {
              const title = post.querySelector('h4').textContent.toLowerCase();
              const excerpt = post.querySelector('.excerpt').textContent.toLowerCase();
              const match = title.includes(term) || excerpt.includes(term);
              post.style.display = match ? '' : 'none';
            });
          });
        })
        .catch(err => {
          postsList.innerHTML = '<p>Không thể tải danh sách blog.</p>';
          console.error('Lỗi tải blog.json:', err);
        });
    });
  </script>
</body>
</html>

